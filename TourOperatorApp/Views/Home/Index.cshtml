@{
    ViewBag.Title = "Главная";
}


<div>
    <p class="subheader">Практическая часть</p>
    <p>
        Создать приложение ASP.NET Core MVC. Стилизацию приложения выполняйте при помощи фреймворка Bootstrap.
    </p>
    <p>
        Примените страницу компоновки. Не забывайте создать модель для решения задачи. По GET-запросу /Home/Index выводите этот текст.
    </p>
    <p>
        Задача 1. Туристическая фирма организует пешие маршруты по степным заказникам. Сведения о туристических маршрутах содержат: идентификатор маршрута, начальный пункт маршрута, обязательный промежуточный пункт маршрута, конечный пункт маршрута, протяженность маршрута в км (целое число), сложность маршрута (значение из ряда А-, А, А+, В-, В, В+, С-, С, С+; А- соответствует минимальной сложности, С+ соответствует максимальной сложности), фамилия и инициалы инструктора маршрута (всего на фирме работает пять инструкторов, требуется редактировать сведения об инструкторах, удалять или добавлять инструктора не надо).
    </p>
    <p>
        Сведения об инструкторах содержат: идентификатор инструктора, фамилия, имя, отчество, дата рождения, категория (А, В, С; А – низшая категория, С – высшая категория).
    </p>
    <p>
        Данные о маршрутах и инструкторах хранить в файле routes.json, instructors.json в папке App_Data. Реализуйте следующий функционал (критерии сортировки и выборки задавайте через переменные маршрута):
    </p>
    <ul class="taskList">
        <li>Добавление маршрута (в форме на отдельной странице, требуется валидация на стороне сервера и на стороне клиента)</li>
        <li>Редактирование сведений о маршруте (в форме на отдельной странице, это может быть та же страница, что страница добавления маршрута, требуется валидация на стороне сервера и на стороне клиента)</li>
        <li>Удаление сведений о маршруте</li>
        <li>Вывод сведений о маршруте в порядке хранения в файле</li>
        <li>Вывод сведений о маршруте по убыванию протяженности маршрута</li>
        <li>Вывод сведений о маршруте по возрастанию протяженности маршрута</li>
        <li>Вывод сведений о маршруте по возрастанию сложности</li>
        <li>Вывод маршрутов с заданным начальным пунктом</li>
        <li>Вывод маршрутов, проходящих через заданный промежуточный пункт</li>
        <li>Вывод маршрутов с протяженностью, попадающей в заданный интервал, требуется валидация на стороне сервера и на стороне клиент</li>
        <li>Выводите сведения о маршруте, выбранном кнопкой (аналогично редактированию) в модальном «окне» на той же странице, что и сведения о маршрутах (используйте AJAX, возвращение JSON из метода действия контроллера)</li>
        <li>Редактирование сведений об инструкторе, требуется валидация на стороне сервера и на стороне клиента</li>
        <li>Вывод сведений об инструкторах в порядке хранения в файле</li>
        <li>Вывод сведений об инструкторах в порядке убывания категорий</li>
        <li>Вывод сведений об инструкторах в алфавитном порядке</li>
        <li>Вывод сведений об инструкторах с заданной категорией</li>
        <li>Выводите сведения об инструкторе, выбранном кнопкой (аналогично редактированию) в модальном «окне» на той же странице, что и сведения об инструкторах (используйте AJAX, возвращение JSON из метода действия контроллера)  </li>
    </ul>

    <p>
        Задача 2. В приложение по задаче 1 добавьте возможность работы с коллекцией клиентов туристической фирмы. Сведения о клиенте содержат идентификатор, фамилию, имя, отчество, возраст клиента в годах, номер телефона, адрес электронной почты, пароль, признак постоянного клиента, фотографию пользователя.
    </p>
    <p>
        Требуется хранить коллекцию сведений о клиентах в файле clients.json в папке App_Data. Также надо добавлять, изменять и удалять сведения о клиенте, в том числе загружать фотографию клиента на сервер. При удалении сведений о клиенте его фотография также должна удаляться с сервера.
    </p>
    <p>
        Для сведений о клиенте действуют следующие бизнес-правила:
    </p>
    <ul class="taskList">
        <li>Все поля обязательны для ввода (кроме идентификатора, это поле генерируется в коде для обеспечения уникальности)</li>
        <li>Пароль должен быть от 8 до 28 символов в длину, хранить пароль в коллекции и в файле требуется в закодированном виде, для кодирования требуется применить операцию «Исключающее ИЛИ» каждого байта строки пароля и числа 42</li>
        <li>Возраст клиента должен быть от 18 до 65 лет  </li>
    </ul>
    <p>
        Для коллекции сведений о клиентах реализуйте следующий функционал (критерии сортировки и выборки задавайте через переменные маршрута):
    </p>
        <ul class="taskList">
        <li>Вывод коллекции в порядке хранения в файле данных</li>
        <li>Вывод коллекции в алфавитном порядке</li>
        <li>Вывод коллекции по убыванию возраста</li>
        <li>Вывод сведений о клиентах с заданным диапазоном возраста (требуется валидация параметров на стороне клиента и на стороне сервера)</li>
        <li>Вывод сведений о клиентах по фамилии</li>
        <li>Вывод сведений о постоянных клиентах</li>
        <li>Вывод сведений о клиенте, выбранном кнопкой (аналогично редактированию) в модальном «окне» на той же странице, что и сведения о клиентах (используйте AJAX, возвращение JSON из метода действия контроллера)  </li>
    </ul>
    <p class="subheader">Дополнительно</p>
    <p>
        Запись занятия можно скачать по <a class="link" target="_blank" href="https://cloud.mail.ru/public/vk3c/GYVixkoQv">этой ссылке</a>.
        Материалы занятия в этом же архиве.
    </p>
</div>